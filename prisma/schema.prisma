generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model AccountTypes {
  name            String  @id
  interest_rate   Decimal @db.Decimal(4, 3)
  transaction_fee Decimal @db.Decimal(4, 3)
  Users           Users[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model PaymentTypes {
  name         String         @id
  Transactions Transactions[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Roles {
  name String @id
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model TransactionStatuses {
  name         String         @id
  Transactions Transactions[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model TransactionTypes {
  name         String         @id
  Transactions Transactions[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Transactions {
  id                  Int                 @id @default(autoincrement())
  user_id             Int
  created_by_user_id  Int
  amount              Decimal             @db.Decimal(32, 2)
  fee                 Decimal             @default(0.00) @db.Decimal(32, 2)
  transaction_type    String
  payment_type        String
  attachment          String?
  note                String?
  status              String
  created_at          DateTime            @default(now()) @db.Timestamp(6)
  updated_at          DateTime            @default(now()) @db.Timestamp(6)
  created_by_user     Users               @relation("created_by_user", fields: [created_by_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Transactions_CreatedUserId")
  PaymentTypes        PaymentTypes        @relation(fields: [payment_type], references: [name], onDelete: NoAction, onUpdate: NoAction, map: "FK_Transactions_PaymentType")
  TransactionStatuses TransactionStatuses @relation(fields: [status], references: [name], onDelete: NoAction, onUpdate: NoAction, map: "FK_Transactions_Status")
  TransactionTypes    TransactionTypes    @relation(fields: [transaction_type], references: [name], onDelete: NoAction, onUpdate: NoAction, map: "FK_Transactions_TransactionType")
  user_user           Users               @relation("user_user", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Transactions_UserId")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Users {
  id                      Int            @id @default(autoincrement())
  account_type            String
  minecraft_uuid          String?
  minecraft_username      String?
  discord_username        String?
  password                String
  created_at              DateTime       @default(now()) @db.Timestamp(6)
  updated_at              DateTime       @default(now()) @db.Timestamp(6)
  created_by_transactions Transactions[] @relation("created_by_user")
  user_transactions       Transactions[] @relation("user_user")
  AccountTypes            AccountTypes   @relation(fields: [account_type], references: [name], onDelete: NoAction, onUpdate: NoAction, map: "FK_Users_AccountType")
}
