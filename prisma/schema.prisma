generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Transactions {
  id                   Int                  @id @default(autoincrement()) @db.UnsignedInt
  user_id              Int                  @db.UnsignedInt
  created_user_id      Int                  @db.UnsignedInt
  amount               Decimal              @db.Decimal(32, 2)
  fee                  Decimal              @default(0.00) @db.Decimal(32, 2)
  transaction_type     String               @db.VarChar(16)
  payment_type         String               @db.VarChar(16)
  attachment           Bytes?               @db.MediumBlob
  note                 String?              @db.VarChar(256)
  status               String               @db.VarChar(16)
  created_at           DateTime             @default(now()) @db.Timestamp(0)
  updated_at           DateTime             @default(now()) @db.Timestamp(0)
  Payment_Types        Payment_Types        @relation(fields: [payment_type], references: [name], onUpdate: Restrict, map: "FK_PaymentType")
  Transaction_Statuses Transaction_Statuses @relation(fields: [status], references: [name], onUpdate: Restrict, map: "FK_TransactionStatuses")
  Transaction_Types    Transaction_Types    @relation(fields: [transaction_type], references: [name], onUpdate: Restrict, map: "FK_TransactionType")
  Users                Users                @relation(fields: [id], references: [id], onUpdate: Restrict, map: "Transactions_ibfk_1")

  @@index([payment_type], map: "FK_PaymentType")
  @@index([status], map: "FK_TransactionStatuses")
  @@index([transaction_type], map: "FK_TransactionType")
}

model Users {
  id                 Int           @id @default(autoincrement()) @db.UnsignedInt
  minecraft_uuid     String        @unique(map: "minecraft_uuid") @db.VarChar(36)
  minecraft_username String        @unique(map: "minecraft_username") @db.VarChar(24)
  discord_username   String        @unique(map: "discord_username") @db.VarChar(32)
  password           String        @db.Char(60)
  created_at         DateTime      @default(now()) @db.Timestamp(0)
  updated_at         DateTime      @default(now()) @db.Timestamp(0)
  Transactions       Transactions?
}

model Payment_Types {
  name         String         @unique(map: "name") @db.VarChar(16)
  Transactions Transactions[]
}

model Transaction_Statuses {
  name         String         @unique(map: "name") @db.VarChar(16)
  Transactions Transactions[]
}

model Transaction_Types {
  name         String         @unique(map: "name") @db.VarChar(16)
  Transactions Transactions[]
}
